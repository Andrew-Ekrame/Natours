@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;
/*.row {
  max-width: $grid-width;
  margin: 0 auto;
  @include clearfix;
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }
  [class^="col_"] {
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
*/
.grid {
  display: grid;
  max-width: $grid-width;
  margin: 0 auto;
  row-gap: $gutter-horizontal;
  column-gap: $gutter-vertical;
  @include respond(tab-port) {
    column-gap: $gutter-vertical-small;
    justify-content: center;
    grid-template-columns: 1fr;
    padding: 0 3rem;
  }
  &--2-col {
    grid-template-columns: repeat(2, 1fr);
    @include respond(tab-port) {
      grid-template-columns: 50rem;
    }
  }

  &--3-col {
    grid-template-columns: repeat(3, 1fr);
    @include respond(tab-port) {
      grid-template-columns: 50rem;
    }
  }

  &--4-col {
    grid-template-columns: repeat(4, 1fr);
    @include respond(tab-port) {
      grid-template-columns: 50rem;
    }
  }

  .col-1 {
    grid-column: span 1;
  }

  .col-2 {
    grid-column: span 2;
  }

  .col-3 {
    grid-column: span 3;
  }
}
